[{"C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\index.js":"1","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\reportWebVitals.js":"2","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Home.js":"3","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Channel.js":"4","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Messages.js":"5","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Profile.js":"6","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Explore.js":"7","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Error.js":"8","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Login.js":"9","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Notifications.js":"10","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\ChannelCreation.js":"11","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Registration.js":"12","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\ScrollPane.js":"13","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\ProfileViewer.js":"14","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\Navbar.js":"15","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\NotificationsScrollPane.js":"16","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\SidePane.js":"17","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\ChannelViewer.js":"18","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\ChannelCreator.js":"19","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\services\\Config.js":"20","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\Spinner.js":"21","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\Notification.js":"22","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\BackToTop.js":"23","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\PostBox.js":"24","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\Squeal.js":"25","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\services\\AccountManager.js":"26","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\AuthenticationBox.js":"27","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\ReSquealModal.js":"28","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\MapContainer.js":"29","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\Tag.js":"30"},{"size":2386,"mtime":1695917915574,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1695917915580,"results":"33","hashOfConfig":"32"},{"size":639,"mtime":1695917915577,"results":"34","hashOfConfig":"32"},{"size":656,"mtime":1695917915575,"results":"35","hashOfConfig":"32"},{"size":647,"mtime":1695917915578,"results":"36","hashOfConfig":"32"},{"size":654,"mtime":1695917915579,"results":"37","hashOfConfig":"32"},{"size":645,"mtime":1695917915576,"results":"38","hashOfConfig":"32"},{"size":933,"mtime":1695917915576,"results":"39","hashOfConfig":"32"},{"size":4671,"mtime":1695917915577,"results":"40","hashOfConfig":"32"},{"size":698,"mtime":1695917915579,"results":"41","hashOfConfig":"32"},{"size":673,"mtime":1695917915576,"results":"42","hashOfConfig":"32"},{"size":10349,"mtime":1695917915579,"results":"43","hashOfConfig":"32"},{"size":6904,"mtime":1696532955217,"results":"44","hashOfConfig":"32"},{"size":3789,"mtime":1696532955217,"results":"45","hashOfConfig":"32"},{"size":5584,"mtime":1696532955215,"results":"46","hashOfConfig":"32"},{"size":2658,"mtime":1695917915501,"results":"47","hashOfConfig":"32"},{"size":1891,"mtime":1696532955217,"results":"48","hashOfConfig":"32"},{"size":5721,"mtime":1696532955214,"results":"49","hashOfConfig":"32"},{"size":5202,"mtime":1696933442048,"results":"50","hashOfConfig":"32"},{"size":106,"mtime":1695917915580,"results":"51","hashOfConfig":"32"},{"size":323,"mtime":1695917915504,"results":"52","hashOfConfig":"32"},{"size":1103,"mtime":1695917915501,"results":"53","hashOfConfig":"32"},{"size":557,"mtime":1695917915496,"results":"54","hashOfConfig":"32"},{"size":18152,"mtime":1697127348435,"results":"55","hashOfConfig":"32"},{"size":9482,"mtime":1696532955017,"results":"56","hashOfConfig":"32"},{"size":551,"mtime":1696532955219,"results":"57","hashOfConfig":"32"},{"size":710,"mtime":1695917915496,"results":"58","hashOfConfig":"32"},{"size":7724,"mtime":1695917915502,"results":"59","hashOfConfig":"32"},{"size":2042,"mtime":1695917915498,"results":"60","hashOfConfig":"32"},{"size":526,"mtime":1695917915505,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},"e0zxtj",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},"C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\index.js",["167","168","169","170"],[],"import React, {createContext} from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport {\r\n    BrowserRouter,\r\n    createBrowserRouter,\r\n    RouterProvider,\r\n} from \"react-router-dom\";\r\nimport '@yaireo/tagify/dist/tagify.css';\r\n// Bootstrap CSS\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// Bootstrap Bundle JS\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\n// Icons\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n// JQuery\r\nimport $ from 'jquery';\r\n// Popper\r\nimport Popper from 'popper.js';\r\n\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Registration from \"./pages/Registration\";\r\nimport Login from \"./pages/Login\";\r\nimport Messages from \"./pages/Messages\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Channel from \"./pages/Channel\";\r\nimport Explore from \"./pages/Explore\";\r\nimport ChannelCreation from \"./pages/ChannelCreation\";\r\nimport Error from \"./pages/Error\";\r\nimport Notifications from \"./pages/Notifications\";\r\n\r\nexport const router = createBrowserRouter([\r\n    {\r\n        path: \"/\",\r\n        element: <Home />,\r\n    },\r\n    {\r\n        path: \"/login\",\r\n        element: <Login />,\r\n    },\r\n    {\r\n        path: \"/register\",\r\n        element: <Registration />,\r\n    },\r\n    {\r\n        path: \"/messages\",\r\n        element: <Messages />,\r\n    },\r\n    {\r\n        path: \"/explore\",\r\n        element: <Explore />,\r\n    },\r\n    {\r\n        path: \"/notifications\",\r\n        element: <Notifications />,\r\n    },\r\n    {\r\n        path: \"/profiles/:username\",\r\n        element: <Profile />,\r\n    },\r\n    {\r\n        path: \"/channels/:name\",\r\n        element: <Channel />,\r\n    },\r\n    {\r\n        path: \"/channel_creation\",\r\n        element: <ChannelCreation />,\r\n    },\r\n    {\r\n        path: \"/error/:code/:text\",\r\n        element: <Error />,\r\n    },\r\n], {basename: \"/\"});\r\nexport const Context = createContext(null);\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <React.StrictMode>\r\n        <RouterProvider router={router} fallbackElement={<Home />}/>\r\n    </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\reportWebVitals.js",[],[],"C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Home.js",[],[],"C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Channel.js",[],[],"C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Messages.js",[],[],"C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Profile.js",[],[],"C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Explore.js",[],[],"C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Error.js",["171"],[],"import squealLogo from \"../img/squealerLogo.svg\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nfunction Error() {\r\n    let {code, text} = useParams();\r\n     return(\r\n        <div className='container-fluid'>\r\n            <div className='row d-flex justify-content-center'>\r\n                <div className='col-11 col-md-8 col-lg-6'>\r\n                    <div className='col-12 d-flex justify-content-center'>\r\n                        <img src={squealLogo} className='w-25'/>\r\n                    </div>\r\n                    <div className='col-12 d-flex justify-content-center'>\r\n                        <div className='display-2'>{code}</div>\r\n                    </div>\r\n                    <div className='col-12 d-flex justify-content-center'>\r\n                        <div className='fs-5'>{text}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Login.js",["172"],[],"import '../styles/Login.css';\r\nimport squealerLogo from \"../img/squealerLogo.svg\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {getServerDomain} from \"../services/Config\";\r\n\r\nfunction Login() {\r\n    const navigate = useNavigate();\r\n    const onLoginSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(!(await checkExistence())){\r\n            return;\r\n        }\r\n        axios.post(`https://${getServerDomain()}/authenticate_user`, {\r\n            \"username\": document.getElementById(\"floatingUsername\").value,\r\n            \"password\": document.getElementById(\"floatingPassword\").value\r\n        }, { withCredentials: true }).then(response => {\r\n            console.log(response.data.result);\r\n            if (response.data.result === \"successful\") {\r\n                sessionStorage.setItem('username', document.getElementById('floatingUsername').value);\r\n                sessionStorage.setItem('userPropic', response.data['userPropic']);\r\n                navigate(\"/\");\r\n            } else {\r\n                document.getElementById('floatingPassword').classList.remove('is-valid');\r\n                document.getElementById('floatingPassword').classList.add('is-invalid');\r\n                document.getElementById('floatingPassword').nextElementSibling.innerHTML = 'Password is wrong!';\r\n            }\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        });\r\n    }\r\n    return(\r\n        <div className='container-fluid'>\r\n            <div className='position-fixed'><Link to='/'><button className='btn back-arrow-btn'><i className=\"bi bi-arrow-left-short back-arrow\"></i></button></Link></div>\r\n            <div className='row d-flex justify-content-center align-items-center vh-100'>\r\n                <div className='col-11 col-md-8 col-lg-4 mb-5'>\r\n                    <div className='col-12 d-flex justify-content-center'>\r\n                        <img src={squealerLogo}  className='w-25'/>\r\n                    </div>\r\n                    <div className='container-fluid rounded-5 py-3 px-3 px-md-5 mb-5' id='login-container'>\r\n                        <form className='row gap-2' onSubmit={ onLoginSubmit }>\r\n                            <div className='col-12'>\r\n                                <div className=\"form-floating mt-3\">\r\n                                    <input type=\"text\" className=\"form-control rounded-5\" id=\"floatingUsername\" placeholder=\"Username\" required/>\r\n                                    <label className='fs-6' htmlFor=\"floatingUsername\">Username</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-12'>\r\n                                <div className=\"form-floating mt-3\">\r\n                                    <input type=\"password\" className=\"form-control rounded-5\" id=\"floatingPassword\" placeholder=\"Password\" required/>\r\n                                    <label className='fs-6' htmlFor=\"floatingPassword\">Password</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-12 d-flex justify-content-center mt-3 mb-3'>\r\n                                <button className='btn btn-primary rounded-5 fs-5'>Login</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nasync function checkExistence() {\r\n    const toCheck = document.getElementById(\"floatingUsername\").value;\r\n    return await axios.get(`https://${getServerDomain()}/existence_user?username=${toCheck}`)\r\n        .then(response => {\r\n            console.log(document.getElementById(\"floatingUsername\").value);\r\n            console.log(response.data);\r\n            if (response.data === \"exist\") {\r\n                document.getElementById('floatingUsername').classList.remove('is-invalid');\r\n                document.getElementById('floatingUsername').classList.add('is-valid');\r\n                document.getElementById('floatingUsername').nextElementSibling.innerHTML = 'Username valid!';\r\n                return true;\r\n            } else {\r\n                document.getElementById('floatingUsername').classList.remove('is-valid');\r\n                document.getElementById('floatingUsername').classList.add('is-invalid');\r\n                document.getElementById('floatingUsername').nextElementSibling.innerHTML = 'Username doesn\\'t exist!';\r\n                return false;\r\n            }\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        });\r\n}\r\n\r\nexport default Login;","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Notifications.js",[],[],"C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\ChannelCreation.js",[],[],"C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\pages\\Registration.js",["173"],[],"import '../styles/Registration.css';\r\nimport squealerLogo from '../img/squealerLogo.svg';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport defaultPropic from \"../img/default_propic.jpg\";\r\nimport {getServerDomain} from \"../services/Config\";\r\n\r\nfunction Registration() {\r\n    const navigate = useNavigate();\r\n    const onRegistrationSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (await checkUsername()) {\r\n            return;\r\n        }\r\n        if (document.getElementById('floatingPassword').value.length < 8) {\r\n            document.getElementById('floatingPassword').classList.remove('is-valid');\r\n            document.getElementById('floatingPassword').classList.add('is-invalid');\r\n            document.getElementById('floatingPassword').nextElementSibling.innerHTML = 'Password must be at least 8 character long!';\r\n            return;\r\n        } else {\r\n            document.getElementById('floatingPassword').classList.remove('is-invalid');\r\n            document.getElementById('floatingPassword').classList.add('is-valid');\r\n            document.getElementById('floatingPassword').nextElementSibling.innerHTML = 'Password is valid!';\r\n        }\r\n        if (document.getElementById('floatingConfirmPassword').value !== document.getElementById('floatingPassword').value) {\r\n            document.getElementById('floatingConfirmPassword').classList.remove('is-valid');\r\n            document.getElementById('floatingConfirmPassword').classList.add('is-invalid');\r\n            document.getElementById('floatingConfirmPassword').nextElementSibling.innerHTML = 'Password does not match!';\r\n            return;\r\n        } else {\r\n            document.getElementById('floatingConfirmPassword').classList.remove('is-invalid');\r\n            document.getElementById('floatingConfirmPassword').classList.add('is-valid');\r\n            document.getElementById('floatingConfirmPassword').nextElementSibling.innerHTML = 'Password does match!';\r\n        }\r\n        const selectedImage = document.getElementById('propicUpload').files[0];\r\n        if (selectedImage) {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(selectedImage);\r\n            reader.onload = async function (event) {\r\n                const encode_img = event.target.result;\r\n                axios.post(`https://${getServerDomain()}/register_user`, {\r\n                    \"name\": document.getElementById('floatingName').value,\r\n                    \"surname\": document.getElementById('floatingSurname').value,\r\n                    \"email\": document.getElementById('floatingEmail').value,\r\n                    \"username\": document.getElementById('floatingUsername').value,\r\n                    \"password\": document.getElementById('floatingPassword').value,\r\n                    \"propic\": encode_img,\r\n                }, { withCredentials: true }).then((res) => {\r\n                    sessionStorage.setItem('userPropic', encode_img);\r\n                    sessionStorage.setItem('username', document.getElementById('floatingUsername').value);\r\n                    navigate(\"/\");\r\n                }).catch(error => {\r\n                    console.log(error.message);\r\n                });\r\n            };\r\n            event.preventDefault();\r\n        } else {\r\n            axios.post(`https://${getServerDomain()}/register_user`, {\r\n                \"name\": document.getElementById('floatingName').value,\r\n                \"surname\": document.getElementById('floatingSurname').value,\r\n                \"email\": document.getElementById('floatingEmail').value,\r\n                \"username\": document.getElementById('floatingUsername').value,\r\n                \"password\": document.getElementById('floatingPassword').value,\r\n            }, { withCredentials: true }).then((res) => {\r\n                sessionStorage.setItem('userPropic', defaultPropic);\r\n                sessionStorage.setItem('username', document.getElementById('floatingUsername').value);\r\n                navigate(\"/\");\r\n            }).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n        }\r\n    }\r\n    return(\r\n        <div className='container-fluid'>\r\n            <div className='position-fixed'><Link to='/'><button className='btn back-arrow-btn'><i className=\"bi bi-arrow-left-short back-arrow\"></i></button></Link></div>\r\n            <div className='row d-flex justify-content-center align-items-center vh-100'>\r\n                <div className='col-11 col-md-8 col-lg-4 mb-5'>\r\n                    <div className='col-12 d-flex justify-content-center'>\r\n                        <img src={squealerLogo}  className='w-25'/>\r\n                    </div>\r\n                    <div className='container-fluid rounded-5 py-3 px-3 px-md-5 mb-5' id='registration-container'>\r\n                        <form className='row' onSubmit={ onRegistrationSubmit }>\r\n                            <div className='col-6 pe-1'>\r\n                                <div className=\"form-floating mt-3\">\r\n                                    <input type=\"text\" className=\"form-control rounded-5\" id=\"floatingName\" placeholder=\"Name\" required/>\r\n                                    <label className='fs-6' htmlFor=\"floatingName\">Name</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-6 ps-1'>\r\n                                <div className=\"form-floating ms-0 mt-3\">\r\n                                    <input type=\"text\" className=\"form-control rounded-5\" id=\"floatingSurname\" placeholder=\"Surname\" required/>\r\n                                    <label className='fs-6' htmlFor=\"floatingSurname\">Surname</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-12'>\r\n                                <div className=\"form-floating mt-3\">\r\n                                    <input type=\"email\" className=\"form-control rounded-5\" id=\"floatingEmail\" placeholder=\"Email\" required/>\r\n                                    <label className='fs-6' htmlFor=\"floatingEmail\">Email</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-12'>\r\n                                <div className=\"form-floating mt-3\">\r\n                                    <input type=\"text\" className=\"form-control rounded-5\" id=\"floatingUsername\" placeholder=\"@yourusername\" maxLength=\"12\" required/>\r\n                                    <label className='fs-6' htmlFor=\"floatingUsername\">@yourusername</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-12'>\r\n                                <div className=\"form-floating mt-3\">\r\n                                    <input type=\"password\" className=\"form-control rounded-5\" id=\"floatingPassword\" placeholder=\"Password\" minLength=\"8\" required/>\r\n                                    <label className='fs-6' htmlFor=\"floatingPassword\">Password</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-12'>\r\n                                <div className=\"form-floating mt-3\">\r\n                                    <input type=\"password\" className=\"form-control rounded-5\" id=\"floatingConfirmPassword\" placeholder=\"Confirm password\" required/>\r\n                                    <label className='fs-6' htmlFor=\"floatingPassword\">Confirm password</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 mt-3\">\r\n                                <label htmlFor=\"propicUpload\" className=\"form-label ps-3\">Profile Image</label>\r\n                                <input className=\"form-control rounded-5\" type=\"file\" id=\"propicUpload\" name=\"propicUpload\"\r\n                                       accept=\".jpg,.png\" />\r\n                            </div>\r\n                            <div className='col-12 d-flex justify-content-center mt-3 mb-3'>\r\n                                <button className='btn btn-primary rounded-5 fs-5 submit' type='submit'>Register</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <button className='btn btn-primary rounded-5 fs-5' onClick={ imageCheck }>Check Propic</button>\r\n                    <button className='btn btn-primary rounded-5 fs-5' onClick={ checkUsername }>Check User</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nasync function checkUsername() {\r\n    const toCheck = document.getElementById(\"floatingUsername\").value;\r\n    return await axios.get(`https://${getServerDomain()}/existence_user?username=${toCheck}`)\r\n        .then(response => {\r\n            if (response.data === \"exist\") {\r\n                document.getElementById('floatingUsername').classList.remove('is-valid');\r\n                document.getElementById('floatingUsername').classList.add('is-invalid');\r\n                document.getElementById('floatingUsername').nextElementSibling.innerHTML = 'Username already exist!';\r\n                return true;\r\n            } else {\r\n                document.getElementById('floatingUsername').classList.remove('is-invalid');\r\n                document.getElementById('floatingUsername').classList.add('is-valid');\r\n                document.getElementById('floatingUsername').nextElementSibling.innerHTML = 'Username valid!';\r\n                return false;\r\n            }\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            return true;\r\n        });\r\n}\r\n\r\nfunction imageCheck() {\r\n    const selectedImage = document.getElementById('propicUpload').files[0];\r\n    console.log(selectedImage);\r\n    console.log(defaultPropic);\r\n    if(selectedImage) {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(selectedImage);\r\n        reader.onload = function(event) {\r\n            const encode_img = event.target.result.split(',')[1];\r\n            const base64Image = Buffer.from(encode_img,'base64');\r\n            console.log(encode_img);\r\n            console.log(base64Image);\r\n        };\r\n    }\r\n}\r\n\r\nexport default Registration;","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\ScrollPane.js",["174"],[],"import '../styles/ScrollPane.css';\r\nimport PostBox from \"./PostBox\";\r\nimport axios from \"axios\";\r\nimport {getServerDomain} from \"../services/Config\";\r\nimport Squeal from \"./Squeal\";\r\nimport {getUserPropic} from \"../services/AccountManager\";\r\nimport {useEffect, useReducer} from \"react\";\r\nimport React from \"react\";\r\nimport {useState} from \"react\";\r\nimport Spinner from \"./Spinner\";\r\nimport BackToTop from \"./BackToTop\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction ScrollPane() {\r\n    const [squeals, setSqueals] = useState(null);\r\n    const [key, forceUpdate] = useState(0);\r\n    const logged = document.cookie.includes('loggedStatus');\r\n    const page = window.location.pathname;\r\n    useEffect(() => {\r\n        async function retrieveSqueals() {\r\n            setSqueals(await loadSqueals());\r\n        }\r\n        retrieveSqueals();\r\n        setTimeout(function() {\r\n            if(document.getElementById('refresh') !== null) {\r\n                document.getElementById('refresh').classList.remove('d-md-none');\r\n                document.getElementById('refresh').classList.add('d-md-flex');\r\n            }\r\n        }, 10000); // Delay for 30000 milliseconds (adjust as needed)\r\n    }, [key]);\r\n    return(\r\n        <div className='container-fluid overflow-x-hidden bg-dark' id='scrollpane-container'>\r\n            <div className='row'>\r\n                <div className='col-12 p-0'>\r\n                    <div className='row pt-3 pb-0 px-4 mt-0 d-none d-md-flex sticky-top bg-dark'>\r\n                        <div className='col-10 d-none d-md-flex align-items-center'>\r\n                            <div className='fw-bolder fs-6 text-white py-2'>{page === '/' ? 'Home' : page.charAt(1).toUpperCase() + page.slice(2)}</div>\r\n                        </div>\r\n                        <div className='col-2 d-none d-md-none justify-content-end align-items-center' id='refresh'>\r\n                            <button className='btn p-0' onClick={ () => forceUpdate(currentKey => currentKey+1) }><i className=\"bi bi-arrow-clockwise fs-4\"></i></button>\r\n                        </div>\r\n                        <div className='col-12 p-0 d-none d-md-block'>\r\n                            <hr className='d-none d-md-block' />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"anchor\" id=\"postBox\"/>\r\n                    <div className='row p-0' id='scrollpane'>\r\n                        <div className='col-12 p-0'>\r\n                            { logged ? <PostBox update={forceUpdate}/> : null}\r\n                        </div>\r\n                        {checkIfExplore()}\r\n                        <div className='col-12 p-0'>\r\n                            <div className='container-fluid mt-3' >\r\n                                <div className='row gap-3' id='squealsContainer' key={key}>\r\n                                    {squeals ? squeals :\r\n                                        <Spinner/>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <BackToTop anchorId='postBox'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport async function loadSqueals() {\r\n    const page = window.location.pathname;\r\n    const logged = document.cookie.includes('loggedStatus');\r\n    if (page === '/' && logged) {\r\n        return await loadChannelsSqueals();\r\n    } else if (page === '/') {\r\n        return await loadPublicSqueals();\r\n    } else {\r\n        return await loadPrivateSqueals();\r\n    }\r\n}\r\n\r\nasync function loadPublicSqueals() {\r\n    try {\r\n        const response = await axios.get(`https://${getServerDomain()}/channels_squeals`, { withCredentials: true });\r\n        const SquealsComponents = [];\r\n\r\n        for (let entry of response.data) {\r\n            const propic = await getUserPropic(entry.sender);\r\n\r\n            SquealsComponents.push(\r\n                <Squeal\r\n                    key={entry.id}\r\n                    from={entry.from}\r\n                    propic={propic}\r\n                    username={entry.sender}\r\n                    geo={entry.geolocation}\r\n                    img={entry.img}\r\n                    text={entry.text}\r\n                    id={entry.id}\r\n                    date={entry.date}\r\n                    resqueal={entry.resqueal}\r\n                />\r\n            );\r\n        }\r\n\r\n        return SquealsComponents;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n\r\nasync function loadPrivateSqueals() {\r\n    try {\r\n        const response = await axios.get(`https://${getServerDomain()}/private_squeals`, { withCredentials: true });\r\n        const SquealsComponents = [];\r\n\r\n        for (let entry of response.data) {\r\n            const propic = await getUserPropic(entry.sender);\r\n            console.log('id caricato' ,entry.id)\r\n\r\n            SquealsComponents.push(\r\n                <Squeal\r\n                    key={entry.id}\r\n                    from={entry.from}\r\n                    propic={propic}\r\n                    username={entry.sender}\r\n                    geo={entry.geolocation}\r\n                    img={entry.img}\r\n                    text={entry.text}\r\n                    id={entry.id}\r\n                    date={entry.date}\r\n                    resqueal={entry.resqueal}\r\n                />\r\n            );\r\n        }\r\n\r\n        return SquealsComponents;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n\r\nasync function loadChannelsSqueals() {\r\n    try {\r\n        const response = await axios.get(`https://${getServerDomain()}/channels_squeals`, { withCredentials: true });\r\n        const SquealsComponents = [];\r\n\r\n        for (let entry of response.data) {\r\n            const propic = await getUserPropic(entry.sender);\r\n            SquealsComponents.push(\r\n                <Squeal\r\n                    key={entry.id}\r\n                    from={entry.from}\r\n                    propic={propic}\r\n                    username={entry.sender}\r\n                    geo={entry.geolocation}\r\n                    img={entry.img}\r\n                    text={entry.text}\r\n                    id={entry.id}\r\n                    date={entry.date}\r\n                    resqueal={entry.resqueal}\r\n                />\r\n            );\r\n        }\r\n\r\n        return SquealsComponents;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nfunction checkIfExplore() {\r\n    const logged = document.cookie.includes('loggedStatus');\r\n    if(logged && window.location.pathname === '/explore') {\r\n        return(\r\n            <div className='col-12 d-flex justify-content-center align-items-center p-0'>\r\n                <Link to='/channel_creation' className='btn btn-primary rounded-bottom-5 w-75'>Create a channel</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ScrollPane;\r\n","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\ProfileViewer.js",["175","176","177","178"],[],"import '../styles/ProfileViewer.css';\r\nimport {getUserPropic} from \"../services/AccountManager\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {getServerDomain} from \"../services/Config\";\r\nimport Squeal from \"./Squeal\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport {loadSqueals} from \"./ScrollPane\";\r\nimport Spinner from \"./Spinner\";\r\nimport React from \"react\";\r\nimport {useLocation, useParams} from \"react-router-dom\";\r\nimport BackToTop from \"./BackToTop\";\r\n\r\nfunction ProfileViewer() {\r\n    const [propic, setPropic] = useState(null);\r\n    const [squeals, setSqueals] = useState(null);\r\n    const { username } = useParams();\r\n    useEffect( () => {\r\n        async function retrieveSqueals() {\r\n            setSqueals(await loadRelatedSqueals(username));\r\n        }\r\n        retrieveSqueals();\r\n        async function retrieveData() {\r\n            setPropic(await getUserPropic(username))\r\n        }\r\n        retrieveData();\r\n    }, [username]);\r\n    return(\r\n        <div className='container-fluid p-0 bg-dark'>\r\n            <div className='row d-flex justify-content-center p-0 h-100'>\r\n                <div className='col-12 d-flex flex-column align-items-center p-0' id='scrollpaneProfileV'>\r\n                    <div id=\"anchorRelatedSqueals\"/>\r\n                    <div className='col-11 mx-3 mb-3 pt-5 d-flex flex-column justify-content-center align-items-center bg-white rounded-bottom-5'>\r\n                        <div className='col-3 z-2 mt-3 mt-md-0' id='propicContainerProfileV'>\r\n                            {propic ? (\r\n                                <img className='image w-100 rounded-circle shadow' src={propic} id='propicProfileV'/>\r\n                            ) : (\r\n                                <Spinner/>)}\r\n                        </div>\r\n                        <div className='col-11 z-1 px-3 mb-2'>\r\n                            <div className='fs-3 text-black text-center'>\r\n                                {username}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-6 d-flex justify-content-center sticky-top pt-2 pt-md-0'>\r\n                        <div className='bg-dark rounded-bottom-5 mt-5 mt-md-0 px-3 text-center opacity-75'>\r\n                            Recent squeals\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-12 col-md-10 row gap-3 p-0' id='relatedSquealsContainer'>\r\n                        {squeals ? squeals :\r\n                            <Spinner/>\r\n                        }\r\n                    </div>\r\n                    <BackToTop anchorId='anchorRelatedSqueals'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nasync function loadRelatedSqueals(username) {\r\n    return await axios.get(`https://${getServerDomain()}/related_squeals?username=${username}`, {withCredentials: true})\r\n        .then(async function (response) {\r\n            let SquealsComponents = [];\r\n            let keyCounter = 0;\r\n            for (let entry of response.data) {\r\n                SquealsComponents.push(<Squeal key={keyCounter} from={entry.from}\r\n                                               propic={await getUserPropic(entry.sender)}\r\n                                               username={entry.sender} geo={entry.geolocation}\r\n                                               img={entry.img} text={entry.text} id={entry.id}\r\n                                               date={entry.date} resqueal={entry.resqueal}/>);\r\n                keyCounter++;\r\n            }\r\n\r\n            return SquealsComponents;\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nexport default ProfileViewer;\r\n","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\Navbar.js",["179","180"],[],"import '../styles/Navbar.css';\r\nimport squealerLogo from '../img/squealerLogo.svg'\r\nimport AuthenticationBox from \"./AuthenticationBox\";\r\nimport {loadSqueals} from \"./ScrollPane\";\r\nimport {Link, useNavigate} from 'react-router-dom';\r\nimport {useEffect, useState} from \"react\";\r\nimport {getUserPropic} from \"../services/AccountManager\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nfunction Navbar() {\r\n    const logged = document.cookie.includes('loggedStatus');\r\n    const navigate = useNavigate();\r\n    const [propic, setPropic] = useState();\r\n\r\n    const goToMyProfile = () => {\r\n        navigate('/profiles/' + sessionStorage.getItem('username'));\r\n    };\r\n    useEffect(() => {\r\n        highlightMenu()\r\n        async function retrievePropic() {\r\n            setPropic(await checkPropic());\r\n        }\r\n        retrievePropic();\r\n    }, []);\r\n    return (\r\n        <div className='container-fluid pe-none' id='navbar-container'>\r\n            <div className='row d-flex flex-column justify-content-between h-100'>\r\n                <div className='col-12 d-flex d-md-block' id='navbar-logo-container'>\r\n                    <img src={squealerLogo} id='navbar-logo' className='mx-auto'></img>\r\n                </div>\r\n                <div className='col-12 d-flex flex-column d-md-block justify-content-center p-0 p-md-2'>\r\n                    <ul className='mt-0 mt-md-4 mb-0 p-0 ps-md-3 py-2 py-md-0 d-flex justify-content-center align-items-center d-md-block w-100 h-100 gap-3 gap-md-0 order-1 order-md-0' id='navbar-menu-container'>\r\n                        <li className='mb-md-4 d-inline-block d-md-block'><Link to='/' className='pe-auto navbar-anchor fs-5 navbar-active' id='homeNavBtn'><i className=\"bi bi-house-fill me-3\"></i><div className='d-none d-md-inline'>Home</div></Link></li>\r\n                        <li className='mb-md-4 d-inline-block d-md-block'><Link to='/explore' className='pe-auto navbar-anchor fs-5' id='exploreNavBtn'><i className=\"bi bi-hash me-3\"></i><div className='d-none d-md-inline'>Explore</div></Link></li>\r\n                        <li className='mb-md-4 d-inline-block d-md-none'><Link to='' className='pe-auto navbar-anchor fs-5'><i className=\"bi bi-search me-3\"></i></Link></li>\r\n                        <li className='mb-md-4 d-inline-block d-md-block'><Link to='/notifications' className='pe-auto navbar-anchor fs-5' id='notificationsNavBtn'><i className=\"bi bi-bell-fill me-3\"></i><div className='d-none d-md-inline'>Notifications</div></Link></li>\r\n                        <li className='mb-md-4 d-inline-block d-md-block'><Link to='/messages' className='pe-auto navbar-anchor fs-5' id='messagesNavBtn'><i className=\"bi bi-envelope-fill me-3\"></i><div className='d-none d-md-inline'>Messages</div></Link></li>\r\n                    </ul>\r\n                    { logged ?\r\n                    <div className='d-flex justify-content-end d-md-block order-0 order-md-1'>\r\n                        <Link className='btn btn-primary btn-circle rounded-5 fs-5 fw-semibold ps-3 pe-3 w-100 mt-0 mt-md-5 mb-3 mb-md-0 me-3 ms-md-0 pe-auto' id='squealButton' to='/#postBox'>Squeal</Link>\r\n                    </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n                {!logged ?\r\n                    <div className='col-12 d-block d-md-block order-md-2 mt-3 px-0 mb-md-3' id='navbar-authentication-container'>\r\n                        <AuthenticationBox/>\r\n                    </div>\r\n                :\r\n                    <div type=\"button\" className='col-12 d-flex align-items-center mt-1 mb-md-3 pe-auto' data-bs-toggle=\"dropdown\" aria-expanded=\"false\" id='navbar-propic-container'>\r\n                        <img src={propic ? propic : <Spinner />} className='w-25' id='navbar-propic'/>\r\n                        <div className='fs-6 fw-semibold d-none d-md-block ms-1'>{ '@' + sessionStorage.getItem('username') }</div>\r\n                        <ul className=\"dropdown-menu\">\r\n                            <li><button className='dropdown-item' onClick={ goToMyProfile }>My profile</button></li>\r\n                            <li><button className='dropdown-item' onClick={ logout }>Logout</button></li>\r\n                        </ul>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction logout() {\r\n    sessionStorage.removeItem('loggedStatus');\r\n    sessionStorage.removeItem('username');\r\n    sessionStorage.removeItem('userPropic');\r\n    document.cookie = 'loggedStatus=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\r\n    loadSqueals();\r\n    window.location.reload();\r\n}\r\n\r\nfunction highlightMenu() {\r\n    const path = window.location.pathname;\r\n    if(document.getElementsByClassName('navbar-active').length > 0) {\r\n        document.getElementsByClassName('navbar-active').item(0).classList.remove('navbar-active');\r\n    }\r\n    if(path === '/'){\r\n        document.getElementById('homeNavBtn').classList.add('navbar-active');\r\n    } else if(path.slice(1, path.length)) {\r\n        const elementId = path.slice(1, path.length) + 'NavBtn';\r\n        if(document.getElementById(elementId) !== null){\r\n            document.getElementById(elementId).classList.add('navbar-active');\r\n        }\r\n    }\r\n\r\n\r\n}\r\nexport async function checkPropic() {\r\n    if(sessionStorage.getItem('userPropic') === undefined || !sessionStorage.getItem('userPropic')) {\r\n        return sessionStorage.getItem('userPropic');\r\n    } else {\r\n        console.log(\"setted here\");\r\n        return await getUserPropic(sessionStorage.getItem(\"username\"));\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\NotificationsScrollPane.js",["181","182"],[],"import {useEffect, useState} from \"react\";\r\nimport Notification from \"./Notification\";\r\nimport axios from \"axios\";\r\nimport {getServerDomain} from \"../services/Config\";\r\nimport {getUserPropic} from \"../services/AccountManager\";\r\nimport Squeal, {formatDate} from \"./Squeal\";\r\nimport React from \"react\";\r\nimport Spinner from \"./Spinner\";\r\nimport BackToTop from \"./BackToTop\";\r\n\r\nfunction NotificationsScrollPane() {\r\n    const [notifications, setNotifications] = useState(null);\r\n    const [key, forceUpdate] = useState(0);\r\n    useEffect(() => {\r\n        async function retrieveNotifications() {\r\n            setNotifications(await loadNotifications());\r\n        }\r\n\r\n        retrieveNotifications();\r\n    }, [key])\r\n\r\n    async function loadNotifications() {\r\n        try {\r\n            const response = await axios.get(`https://${getServerDomain()}/users/user/notifications`, {withCredentials: true});\r\n            const NotificationsComponents = [];\r\n\r\n            for (let entry of response.data) {\r\n                const propic = await getUserPropic(entry.sender);\r\n\r\n                NotificationsComponents.push(\r\n                    <Notification\r\n                        key={entry._id}\r\n                        text={entry.text}\r\n                        date={formatDate(entry.date)}\r\n                        title={entry.title}\r\n                        image={propic}\r\n                        id={entry._id}\r\n                        deleteNotification={deleteNotification}\r\n                    />\r\n                );\r\n            }\r\n\r\n            return NotificationsComponents;\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    async function deleteNotification(notificationId) {\r\n        try {\r\n            await axios.post(`https://${getServerDomain()}/users/user/notifications/notification`, {\r\n                id: notificationId\r\n            }, {withCredentials: true}).catch(error => {\r\n                console.log(error.message);\r\n            });\r\n            forceUpdate(currentKey => currentKey + 1);\r\n            console.log('called');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='container-fluid vh-100 overflow-y-scroll'>\r\n            <div className='row mt-5 mt-md-0'>\r\n                <div className=\"anchor\" id=\"notificationTop\"/>\r\n                <div className='col-12 mt-5 mt-md-3'>\r\n                    {notifications ? notifications : <Spinner />}\r\n                </div>\r\n                <BackToTop anchorId={'notificationTop'}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotificationsScrollPane;","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\SidePane.js",["183"],[],"import '../styles/SidePane.css';\r\nimport {useEffect, useState} from \"react\";\r\nimport Spinner from \"./Spinner\";\r\nimport axios from \"axios\";\r\nimport {getServerDomain} from \"../services/Config\";\r\nimport Tag from \"./Tag\";\r\nimport {getUserPropic} from \"../services/AccountManager\";\r\n\r\nfunction SidePane() {\r\n    const [results, setResults] = useState();\r\n    useEffect(() => {\r\n        async function retrieveResults() {\r\n            setResults(await search());\r\n        }\r\n        retrieveResults();\r\n        document.getElementById(\"floatingSearch\").addEventListener('input', retrieveResults);\r\n    }, []);\r\n    return(\r\n        <div className='container-fluid' id='sidepane-container'>\r\n            <div className='row'>\r\n                <div className='col-12'>\r\n                    <div className=\"form-floating mt-3\">\r\n                        <input type=\"text\" className=\"form-control rounded-5\" id=\"floatingSearch\" placeholder=\"Search Squeals, channels or users\"/>\r\n                        <label className='fs-6' htmlFor=\"floatingSearch\">Search channels or users</label>\r\n                        <div className='col-12 mt-3'>\r\n                            {results ? results : <Spinner />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nasync function search() {\r\n    const response = await axios.get(`https://${getServerDomain()}/search?value=${document.getElementById(\"floatingSearch\").value}`, {withCredentials: true});\r\n    let result = [];\r\n    for(let entry of response.data){\r\n        const component = <div className='rounded-5 bg-white px-3 py-2 mb-3'>{entry.charAt(0) === \"@\" ? <img className='col-2 rounded-circle me-2' src={await getUserPropic(entry.slice(1))}/> : null}<Tag tagText={entry}/></div>\r\n        result.push(component);\r\n    }\r\n    return result;\r\n}\r\nexport default SidePane;\r\n","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\ChannelViewer.js",["184","185","186","187"],[],"import '../styles/ProfileViewer.css';\r\nimport {getUserPropic} from \"../services/AccountManager\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {getServerDomain} from \"../services/Config\";\r\nimport Squeal from \"./Squeal\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport {loadSqueals} from \"./ScrollPane\";\r\nimport Spinner from \"./Spinner\";\r\nimport React from \"react\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport BackToTop from \"./BackToTop\";\r\n\r\nfunction ProfileViewer() {\r\n    const navigate = useNavigate();\r\n    const [squeals, setSqueals] = useState(null);\r\n    const [owner, setOwner] = useState(null);\r\n    const [subscribed, setSubscribed] = useState(null);\r\n    let { name } = useParams();\r\n    useEffect( () => {\r\n        async function retrieveSqueals() {\r\n            setSqueals(await loadChannelSqueals(name));\r\n        }\r\n        retrieveSqueals();\r\n        async function retrieveOwnerCheck() {\r\n            setOwner(await isOwner());\r\n        }\r\n        retrieveOwnerCheck();\r\n        async function retrieveSubscriptionCheck() {\r\n            setSubscribed(await isSubscribed());\r\n        }\r\n        retrieveSubscriptionCheck();\r\n    }, []);\r\n\r\n    async function getChannel() {\r\n        try {\r\n            return await axios.get(`https://${getServerDomain()}/channels/userChannels/${name}`, {withCredentials: true}).catch((e) => {\r\n                if (e.response.status === 404) {\r\n                    navigate(\"/error/404/channel%20not%20found\");\r\n                } else if(e.response.status === 403) {\r\n                    navigate(\"/error/404/you%20are%20not%20allowed%20to%20enter%20this%20channel\");\r\n                }\r\n            })\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n    getChannel();\r\n\r\n    async function isOwner(){\r\n        const channel = await getChannel();\r\n        if(channel.data.owners.includes(sessionStorage.getItem(\"username\"))){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async function isSubscribed() {\r\n        const response = await axios.get(`https://${getServerDomain()}/channels/${name}?username=${sessionStorage.getItem(\"username\")}`, {withCredentials: true}).catch((e) => {\r\n            console.log(e);\r\n        });\r\n        if(response.data === \"Subscribed\"){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async function subscribe() {\r\n        await axios.post(`https://${getServerDomain()}/channels/subscribe`, {\r\n            name: name\r\n        }, {withCredentials: true}).then((res) => {\r\n            setSubscribed(true);\r\n        }).catch((e) => {\r\n            console.log(e);\r\n        })\r\n    }\r\n\r\n    async function unsubscribe() {\r\n        await axios.post(`https://${getServerDomain()}/channels/unsubscribe`, {\r\n            name: name\r\n        }, {withCredentials: true}).then((res) => {\r\n            setSubscribed(false);\r\n        }).catch((e) => {\r\n            console.log(e);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className='container-fluid p-0 bg-dark'>\r\n            <div className='row d-flex justify-content-center p-0 h-100'>\r\n                <div className='col-12 d-flex flex-column align-items-center p-0' id='scrollpaneProfileV'>\r\n                    <div id=\"anchorRelatedSqueals\"/>\r\n                    <div className='col-11 mx-3 mb-md-5 px-4 pt-5 pb-3 d-flex justify-content-center align-items-center bg-white rounded-bottom-5'>\r\n                        <div className='fs-3 text-black text-center mt-5 mt-md-0 me-auto'>\r\n                            {['§', name]}\r\n                        </div>\r\n                        {subscribed ? <button className='btn btn-secondary rounded-5 mt-5 mt-md-0 ' onClick={() => {unsubscribe()}}>Unsubscribe</button> : <button className='btn btn-primary rounded-5 mt-5 mt-md-0' onClick={() => {subscribe()}}>Subscribe</button>}\r\n                    </div>\r\n\r\n                    <div className='col-6 d-flex justify-content-center sticky-top pt-2 pt-md-0'>\r\n                        <div className='bg-dark rounded-bottom-5 mt-5 mt-md-0 px-3 text-center opacity-75'>\r\n                            Recent squeals\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-md-10 row gap-3 p-0' id='relatedSquealsContainer'>\r\n                        {squeals ? squeals :\r\n                            <Spinner/>\r\n                        }\r\n                    </div>\r\n                    <BackToTop anchorId='anchorRelatedSqueals'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nasync function loadChannelSqueals(name) {\r\n    try {\r\n        const response = await axios.get(`https://${getServerDomain()}/channel_squeals?name=${name}`, { withCredentials: true });\r\n        const SquealsComponents = [];\r\n\r\n        for (let entry of response.data) {\r\n            const propic = await getUserPropic(entry.sender);\r\n            console.log(entry.id);\r\n\r\n            SquealsComponents.push(\r\n                <Squeal\r\n                    key={entry.id} // Consider using the unique entry ID as the key\r\n                    from={entry.from}\r\n                    propic={propic}\r\n                    username={entry.sender}\r\n                    geo={entry.geolocation}\r\n                    img={entry.img}\r\n                    text={entry.text}\r\n                    id={entry.id}\r\n                    date={entry.date}\r\n                    resqueal={entry.resqueal}\r\n                />\r\n            );\r\n        }\r\n\r\n        return SquealsComponents;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport default ProfileViewer;\r\n","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\ChannelCreator.js",["188","189"],[],"C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\services\\Config.js",[],[],"C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\Spinner.js",[],[],"C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\Notification.js",["190","191","192"],[],"import {checkForTags} from \"./Squeal\";\r\nimport axios from \"axios\";\r\nimport {getServerDomain} from \"../services/Config\";\r\n\r\nfunction Notification({image, date, text, title, id, deleteNotification}) {\r\n    return(\r\n        <div className='container-fluid bg-white rounded-5 p-3 mt-3 mb-3'>\r\n            <div className='row'>\r\n                <div className='col-12 d-flex justify-content-center align-items-center'>\r\n                    <div className='col-1'><img className='w-75 rounded-circle' src={image}/></div>\r\n                    <strong className=\"me-auto\">{title}</strong>\r\n                    <small>{date}</small>\r\n                    <button className='btn py-0 border-0' onClick={() => {deleteNotification(id)}}>\r\n                        <i className=\"bi bi-x fs-4\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div className='row'>\r\n                <div className='col-12 mb-2'>\r\n                    {checkForTags(text)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\BackToTop.js",[],[],"C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\PostBox.js",["193","194","195","196"],[],"C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\Squeal.js",["197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216"],[],"import '../styles/Squeal.css';\r\nimport React, {useEffect, useRef} from 'react';\r\nimport {Link, Router, Route, useNavigate} from 'react-router-dom';\r\nimport {Context, router} from \"../index\";\r\nimport Profile from \"../pages/Profile\";\r\nimport Home from \"../pages/Home\";\r\nimport Tag from \"./Tag\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport {loadSqueals} from \"./ScrollPane\";\r\nimport MapContainer from \"./MapContainer\";\r\nimport {useState} from \"react\";\r\nimport {createRoot} from \"react-dom/client\";\r\nimport ReSquealModal from \"./ReSquealModal\";\r\nimport axios from \"axios\";\r\nimport {getServerDomain} from \"../services/Config\";\r\nimport {getUserPropic} from \"../services/AccountManager\";\r\nimport Spinner from \"./Spinner\";\r\n\r\n\r\n\r\nfunction Squeal({from, username, propic, geo, img, text, id, date, resqueal}) {\r\n\r\n    function squealBody(text, img, geo) {\r\n        if(geo.length !== 0) {\r\n            const pos = {lat: parseFloat(geo[0]), lng: parseFloat(geo[1])}\r\n            return <div className='my-2'><MapContainer position={pos} mark={[pos]}/></div>;\r\n        } else if(img !== \"\") {\r\n            return <div className='d-flex justify-content-center my-2'><img src={img} className='col-12 col-md-6 p-0'/></div>\r\n        } else {\r\n            return <div className='fs-6 my-3 px-2' id='textContainer'>{checkForTags(text)}</div>;\r\n        }\r\n    }\r\n\r\n    async function getSqueal() {\r\n        try {\r\n            const response = await axios.get(`https://${getServerDomain()}/squeal?squealId=${resqueal}`, {withCredentials: true});\r\n            return(response);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const [resquealCheck, setResquealCheck] = useState();\r\n    const [reactionCheck, setReactionCheck] = useState();\r\n    useEffect(() => {\r\n        async function retrieveResqueal() {\r\n            setResquealCheck(await checkResqueal());\r\n        }\r\n        retrieveResqueal();\r\n        async function retrieveCheckReaction(){\r\n            setReactionCheck(await checkReaction(id, sessionStorage.getItem(\"username\")));\r\n        }\r\n        retrieveCheckReaction();\r\n    }, []);\r\n\r\n\r\n    async function checkResqueal() {\r\n        if (resqueal) {\r\n            const squeal = await getSqueal(resqueal);\r\n            return (\r\n                <div className='container-fluid p-0 mb-3'>\r\n                    <div className='row rounded-4 bg-secondary bg-opacity-25 p-2'>\r\n                        <div className='col-12 d-flex'>\r\n                            <div className='fs-6 ms-auto'>{formatDate(squeal.data.date)}</div>\r\n                        </div>\r\n                        <hr className='mt-0 mb-1'/>\r\n                        <div className='col-12'>\r\n                            <div className='row'>\r\n                                <div className='col-2 col-md-1 pe-0 my-2'><img src={await getUserPropic(squeal.data.sender)} className='w-100'\r\n                                                                               id='propic'/></div>\r\n                                <div className='col-10 col-md-11 d-flex align-items-center'>\r\n                                    <div className='fs-6 fw-semibold '>{squeal.data.sender}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-12'>\r\n                            {squealBody(squeal.data.text, squeal.data.img, squeal.data.geolocation)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    async function checkReaction(squealId, username) {\r\n        const response = await axios.get(`https://${getServerDomain()}/squeals/squeal/${squealId}?username=${username}`, {withCredentials: true});\r\n        if(response.data !== \"unreacted\"){\r\n            document.getElementById(response.data + id).style.color = \"#1DA0F2\";\r\n        }\r\n    }\r\n\r\n    async function onLikeButtonClick(l){\r\n        let tipo = String(l);\r\n        console.log(\"\" + tipo);\r\n\r\n        //await axios.put(`https://${getServerDomain()}/squealId_reaction?sender=${this.props.from}&text=${this.props.text}`)\r\n        console.log(\"username passato: \" + sessionStorage.getItem(\"username\"));\r\n        let user = sessionStorage.getItem(\"username\");\r\n\r\n        let tipi = [\"like\", \"heart\", \"neutrale\", \"dislike\", \"angry\"];\r\n\r\n        console.log(\"prova id:: \" + tipo + id);\r\n\r\n        console.log(\"this.props.id:::: \" + id);\r\n\r\n        let color = document.getElementById(tipo + id).style.color;\r\n\r\n        if(color === \"blue\"){\r\n            document.getElementById(tipo + id).style.color = \"#ADB5BD\";\r\n        }else{\r\n            document.getElementById(tipo + id).style.color = \"#1DA0F2\";\r\n            for(let i = 0; i < tipi.length; i++){\r\n                console.log(tipi[i] + \"  :  \" + tipo);\r\n                if(tipo !== tipi[i]){\r\n                    document.getElementById(tipi[i] + id).style.color = \"#ADB5BD\";\r\n                }\r\n            }\r\n        }\r\n\r\n        axios.put(`https://${getServerDomain()}/add_reaction`, {\r\n            reactionType: tipo,\r\n            username: user,\r\n            squealId: id\r\n        },{ withCredentials: true })\r\n            .then(function (response) {\r\n                console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    return(\r\n    <div className='container-fluid'>\r\n        <div className='row rounded-4 bg-white p-2 ms-3 me-3'>\r\n            <div className='col-12 d-flex'>\r\n                <div className='fs-6'>{from !== undefined ? ['from: ', <Tag tagText={from}/>] : null}</div>\r\n                <div className='fs-6 ms-auto'>{formatDate(date)}</div>\r\n            </div>\r\n            <hr className='mt-0 mb-1'/>\r\n            <div className='col-12'>\r\n                {resquealCheck ? resquealCheck : null}\r\n            </div>\r\n            <div className='col-12'>\r\n                <div className='row'>\r\n                    <div className='col-2 col-md-1 pe-0 my-2'><img src={propic} className='w-100' id='propic'/></div>\r\n                    <div className='col-10 col-md-11 d-flex align-items-center'>\r\n                        <div className='fs-6 fw-semibold '>{username}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='col-12'>\r\n                {squealBody(text, img, geo)}\r\n            </div>\r\n            <div className='col-12 d-flex'>\r\n                <button className='btn postbox-btn me-auto' data-bs-toggle=\"modal\" data-bs-target={'#' + 'resquealModal'+ id}><i className=\"bi bi-chat-left-quote-fill\"></i></button>\r\n                <div className='reactions' className='d-flex justify-content-center align-items-center gap-2'>\r\n                    <i className=\"bi bi-emoji-angry reactionIcon fs-5\" id={\"angry\" + id} onClick={() => onLikeButtonClick(\"angry\")}/>\r\n\r\n                    <i className=\"bi bi-hand-thumbs-down-fill reactionIcon fs-5\" id={\"dislike\" + id} onClick={() => onLikeButtonClick(\"dislike\")}/>\r\n\r\n                    <i className=\"bi bi-emoji-neutral reactionIcon fs-5\" id={\"neutrale\" + id} onClick={() => onLikeButtonClick(\"neutrale\")}/>\r\n\r\n                    <i className=\"bi bi-hand-thumbs-up-fill reactionIcon fs-5\" id={\"like\" + id} onClick={() => onLikeButtonClick(\"like\")}/>\r\n\r\n                    <i className=\"bi bi-suit-heart-fill reactionIcon fs-5\" id={\"heart\" + id} onClick={() => onLikeButtonClick(\"heart\")}/>\r\n                </div>\r\n            </div>\r\n            <ReSquealModal resquealModalId={'resquealModal'+ id} squealBody={squealBody(text, img, geo)} username={username} propic={propic} from={from} date={formatDate(date)} id={id}/>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport function formatDate(date) {\r\n    const squealDate = new Date(date);\r\n    const now = new Date();\r\n    const millisecondsDiff = now - squealDate;\r\n    const secondsDiff = Math.floor(millisecondsDiff / 1000);\r\n    const minutesDiff = Math.floor(secondsDiff / 60);\r\n    const hoursDiff = Math.floor(minutesDiff / 60);\r\n\r\n    if (hoursDiff >= 24) {\r\n        // If the time difference is at least 24 hours, return just the date\r\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n        return squealDate.toLocaleDateString(undefined, options);\r\n    } else if (hoursDiff >= 1) {\r\n        // If the time difference is at least 1 hour, return hours and minutes\r\n        const remainingMinutes = minutesDiff % 60;\r\n        return `${hoursDiff}h ${remainingMinutes}m`;\r\n    } else {\r\n        // If the time difference is less than 1 hour, return just the minutes\r\n        return `${minutesDiff}m`;\r\n    }\r\n}\r\n\r\nexport function checkForTags(text) {\r\n    const regex = /\\{\\*tag\\*\\{([^}]+)\\}\\*tag\\*\\}/g;\r\n    let lastIndex = 0;\r\n    const components = [];\r\n\r\n    text.replace(regex, (match, content, index) => {\r\n        // Add the text between the previous match and the current match as a plain text component\r\n        components.push(text.substring(lastIndex, index));\r\n\r\n        // Create a Link component for the current match\r\n        console.log(content);\r\n        const tagText = content;\r\n\r\n        components.push(\r\n            <Tag tagText={tagText}/>\r\n        );\r\n\r\n        lastIndex = index + match.length;\r\n    });\r\n\r\n    // Add any remaining text after the last match\r\n    components.push(text.substring(lastIndex));\r\n    return components;\r\n}\r\n\r\nexport default Squeal;","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\services\\AccountManager.js",[],[],"C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\AuthenticationBox.js",[],[],"C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\ReSquealModal.js",["217","218","219","220"],[],"import React, {useEffect, useId, useRef} from \"react\";\r\nimport Tag from \"./Tag\";\r\nimport {resizeTextarea} from \"./PostBox\";\r\nimport Tagify from '@yaireo/tagify';\r\nimport axios from \"axios\";\r\nimport {getServerDomain} from \"../services/Config\";\r\n\r\nfunction ReSquealModal({resquealModalId, squealBody, username, propic, from, date, id}) {\r\n    const textAreaId = useId();\r\n    useEffect(() => {\r\n        var whitelist_1 = [], whitelist_2 = [];\r\n        var inputText = document.getElementById(textAreaId),\r\n        // init Tagify script on the above inputs\r\n        tagifyText = new Tagify(inputText, {\r\n            mixTagsInterpolator: [\"{*tag*{\", \"}*tag*}\"],\r\n            enforceWhitelist: true,\r\n            mode: 'mix',  // <--  Enable mixed-content\r\n            pattern: /@|§/,  // <--  Text starting with @ or § (if single, String can be used here)\r\n            tagTextProp: 'text',  // <-- the default property (from whitelist item) for the text to be rendered in a tag element.\r\n            originalInputValueFormat: tagData => tagData.value,\r\n            // Array for initial interpolation, which allows only these tags to be used\r\n            whitelist: whitelist_1.concat(whitelist_2).map(function(item){\r\n                return typeof item == 'string' ? {value:item} : item\r\n            }),\r\n            dropdown : {\r\n                enabled: 1,\r\n                position: 'text', // <-- render the suggestions list next to the typed text (\"caret\")\r\n                mapValueTo: 'text', // <-- similar to above \"tagTextProp\" setting, but for the dropdown items\r\n                highlightFirst: true  // automatically highlights first sugegstion item in the dropdown\r\n            },\r\n            callbacks: {\r\n                add: console.log,  // callback when adding a tag\r\n                remove: console.log   // callback when removing a tag\r\n            }\r\n        });\r\n\r\n        // A good place to pull server suggestion list accoring to the prefix/value\r\n\r\n        tagifyText.on('input', function(e){\r\n            var prefix = e.detail.prefix;\r\n            var value = e.detail.value;\r\n            tagifyText.whitelist = null\r\n            // first, clean the whitlist array, because the below code, while not, might be async,\r\n            // therefore it should be up to you to decide WHEN to render the suggestions dropdown\r\n            // tagify.settings.whitelist.length = 0;\r\n\r\n            if( prefix ){\r\n                if( prefix === '@' ) {\r\n                    fetch('https://localhost:3005/search_user?value=' + value)\r\n                        .then(RES => RES.json())\r\n                        .then(function(newWhitelist){\r\n                            tagifyText.whitelist = newWhitelist // update whitelist Array in-place\r\n                            tagifyText.loading(false).dropdown.show(value) // render the suggestions dropdown\r\n                        })\r\n                }\r\n                if( prefix === '§' )\r\n                    fetch('https://localhost:3005/search_channel?value=' + value)\r\n                        .then(RES => RES.json())\r\n                        .then(function(newWhitelist){\r\n                            tagifyText.whitelist = newWhitelist // update whitelist Array in-place\r\n                            tagifyText.loading(false).dropdown.show(value) // render the suggestions dropdown\r\n                        })\r\n\r\n                if( e.detail.value.length > 1 )\r\n                    tagifyText.dropdown.show(e.detail.value);\r\n            }\r\n\r\n            console.log( tagifyText.value )\r\n            console.log('mix-mode \"input\" event value: ', e.detail)\r\n        })\r\n    }, []);\r\n    return(\r\n        <div className=\"modal fade\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\"\r\n             aria-hidden=\"true\" data-backdrop=\"false\" id={resquealModalId}>\r\n            <div className=\"modal-dialog modal-dialog-centered\">\r\n                <div className=\"modal-content shadow\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Resqueal</h5>\r\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\"\r\n                                aria-label=\"Close\"></button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"col-12\">\r\n                            <div className='container-fluid pt-4 pt-md-0 mt-5 mt-md-0'>\r\n                                <div className='row rounded-4 bg-white p-0 ms-3 me-3'>\r\n                                    <div className='col-12 mb-3 mb-lg-1'>\r\n                                        <div className='container-fluid p-0'>\r\n                                            <div className='row rounded-4 bg-secondary bg-opacity-25 p-2'>\r\n                                                <div className='col-12 d-flex'>\r\n                                                    <div className='fs-6'>{from !== undefined ? ['from: ', <Tag tagText={from}/>] : null}</div>\r\n                                                    <div className='fs-6 ms-auto'>{date}</div>\r\n                                                </div>\r\n                                                <hr className='mt-0 mb-1'/>\r\n                                                <div className='col-12'>\r\n                                                    <div className='row'>\r\n                                                        <div className='col-2 col-md-2 pe-0 my-2'><img src={propic} className='w-100' id='propic'/></div>\r\n                                                        <div className='col-10 col-md-10 d-flex align-items-center'>\r\n                                                            <div className='fs-6 fw-semibold '>{username}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='col-12'>\r\n                                                    {squealBody}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <textarea className=\"form-control bg-transparent border-0\" aria-label=\"What's you want to squeal?\" id={textAreaId} placeholder=\"What's you want to squeal?\" required></textarea>\r\n                                        <div className='d-flex'>\r\n                                            <button className='btn btn-primary rounded-5 ms-auto' data-bs-dismiss=\"modal\" onClick={() => {postResqueal(document.getElementById(textAreaId).value, from, username, id)}}>Squeal<i className=\"bi bi-send-fill ms-2\"></i></button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction postResqueal(resquealBody, from, sender, squealId) {\r\n    let receiver;\r\n    if(from){\r\n        receiver = from;\r\n    } else {\r\n        receiver = '@' + sender;\r\n    }\r\n    console.log(receiver);\r\n\r\n    axios.post(`https://${getServerDomain()}/post_resqueal`, {\r\n        text: resquealBody,\r\n        receivers: [receiver],\r\n        resqueal: squealId\r\n    }, {withCredentials: true})\r\n        .then(function (response) {\r\n            console.log(response);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n}\r\n\r\nexport default ReSquealModal;","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\MapContainer.js",["221","222","223","224"],[],"import {useEffect, useMemo, useRef, useState} from 'react';\r\nimport { GoogleMap, useLoadScript, MarkerF } from \"@react-google-maps/api\";\r\nimport { google } from 'google-maps';\r\nimport Spinner from \"./Spinner\";\r\n\r\nexport default function MapContainer({position, editable , mark, onPick}) {\r\n    const { isLoaded } = useLoadScript({\r\n        googleMapsApiKey: \"AIzaSyDN2Sr99IyZH4rm4fCWvVrx2Md-G2HImPA\",\r\n    });\r\n\r\n    if(!isLoaded) {\r\n        return <Spinner/>\r\n    } else {\r\n        return <Map pos={position} edit={editable} mark={mark} onPick={(e) => {onPick(e)}}/>;\r\n    }\r\n}\r\n\r\nfunction Map({pos, edit, mark, onPick}) {\r\n    const [position, setPosition] = useState(null);\r\n\r\n    let lat;\r\n    let lng;\r\n    if(pos){\r\n        lat = pos.lat;\r\n        lng = pos.lng;\r\n    } else if(position) {\r\n        lat = position.coords.latitude;\r\n        lng = position.coords.longitude;\r\n    } else {\r\n        lat = 44.4949;\r\n        lng = 11.3426;\r\n    }\r\n    let center = useMemo(() => ({lat: lat, lng: lng}), [position]);\r\n    let marker;\r\n\r\n    useEffect(() => {\r\n        async function retrievePosition() {\r\n            setPosition(await getPosition());\r\n        }\r\n        retrievePosition();\r\n    }, []);\r\n\r\n    return(\r\n        <div className='map-wrapper'>\r\n            {position ?\r\n                    <GoogleMap zoom={15} center={center} onClick={edit ? onPick : null} mapContainerClassName=\"map-container\">\r\n                        {mark ? mark.map((marker) => (\r\n                            <MarkerF\r\n                                key={0}\r\n                                position={{\r\n                                    lat: marker.lat,\r\n                                    lng: marker.lng\r\n                                }}/>\r\n                        )): null}\r\n                    </GoogleMap>\r\n                    :\r\n                    <Spinner />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getPosition() {\r\n    return new Promise((res, rej) => {\r\n        navigator.geolocation.getCurrentPosition(res, rej);\r\n    });\r\n}","C:\\Users\\aless\\OneDrive\\Desktop\\progettoTec\\Squealer\\client\\squealer\\src\\components\\Tag.js",["225","226","227"],[],"import {RouterProvider, useNavigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {router} from \"../index\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Tag({tagText}){\r\n    function goToTagPage() {\r\n        console.log(tagText);\r\n        if (tagText.charAt(0) === '@') {\r\n            return '/profiles/' + tagText.slice(1);\r\n        } else {\r\n            return '/channels/' + tagText.slice(1);\r\n        }\r\n    }\r\n    return(<Link to={ goToTagPage(tagText) }>{tagText}</Link>)\r\n}\r\n\r\nexport default Tag;",{"ruleId":"228","severity":1,"message":"229","line":4,"column":5,"nodeType":"230","messageId":"231","endLine":4,"endColumn":18},{"ruleId":"228","severity":1,"message":"232","line":16,"column":8,"nodeType":"230","messageId":"231","endLine":16,"endColumn":9},{"ruleId":"228","severity":1,"message":"233","line":18,"column":8,"nodeType":"230","messageId":"231","endLine":18,"endColumn":14},{"ruleId":"228","severity":1,"message":"234","line":23,"column":8,"nodeType":"230","messageId":"231","endLine":23,"endColumn":13},{"ruleId":"235","severity":1,"message":"236","line":11,"column":25,"nodeType":"237","endLine":11,"endColumn":65},{"ruleId":"235","severity":1,"message":"236","line":38,"column":25,"nodeType":"237","endLine":38,"endColumn":68},{"ruleId":"235","severity":1,"message":"236","line":79,"column":25,"nodeType":"237","endLine":79,"endColumn":68},{"ruleId":"228","severity":1,"message":"238","line":7,"column":20,"nodeType":"230","messageId":"231","endLine":7,"endColumn":30},{"ruleId":"228","severity":1,"message":"239","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":16},{"ruleId":"228","severity":1,"message":"240","line":8,"column":9,"nodeType":"230","messageId":"231","endLine":8,"endColumn":20},{"ruleId":"228","severity":1,"message":"241","line":11,"column":9,"nodeType":"230","messageId":"231","endLine":11,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":36,"column":33,"nodeType":"237","endLine":36,"endColumn":118},{"ruleId":"235","severity":1,"message":"236","line":29,"column":21,"nodeType":"237","endLine":29,"endColumn":82},{"ruleId":"235","severity":1,"message":"236","line":52,"column":25,"nodeType":"237","endLine":52,"endColumn":103},{"ruleId":"228","severity":1,"message":"242","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":14},{"ruleId":"243","severity":1,"message":"244","line":20,"column":8,"nodeType":"245","endLine":20,"endColumn":13,"suggestions":"246"},{"ruleId":"235","severity":1,"message":"236","line":39,"column":105,"nodeType":"237","endLine":39,"endColumn":191},{"ruleId":"228","severity":1,"message":"239","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":16},{"ruleId":"228","severity":1,"message":"240","line":8,"column":9,"nodeType":"230","messageId":"231","endLine":8,"endColumn":20},{"ruleId":"228","severity":1,"message":"247","line":17,"column":12,"nodeType":"230","messageId":"231","endLine":17,"endColumn":17},{"ruleId":"243","severity":1,"message":"248","line":33,"column":8,"nodeType":"245","endLine":33,"endColumn":10,"suggestions":"249"},{"ruleId":"228","severity":1,"message":"250","line":5,"column":9,"nodeType":"230","messageId":"231","endLine":5,"endColumn":22},{"ruleId":"228","severity":1,"message":"242","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":14},{"ruleId":"228","severity":1,"message":"234","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":13},{"ruleId":"228","severity":1,"message":"251","line":3,"column":9,"nodeType":"230","messageId":"231","endLine":3,"endColumn":24},{"ruleId":"235","severity":1,"message":"236","line":10,"column":44,"nodeType":"237","endLine":10,"endColumn":94},{"ruleId":"252","severity":1,"message":"253","line":155,"column":13,"nodeType":"254","messageId":"255","endLine":155,"endColumn":98},{"ruleId":"228","severity":1,"message":"256","line":160,"column":14,"nodeType":"230","messageId":"231","endLine":160,"endColumn":21},{"ruleId":"235","severity":1,"message":"236","line":221,"column":21,"nodeType":"237","endLine":221,"endColumn":95},{"ruleId":"235","severity":1,"message":"236","line":316,"column":21,"nodeType":"237","endLine":316,"endColumn":63},{"ruleId":"228","severity":1,"message":"257","line":2,"column":27,"nodeType":"230","messageId":"231","endLine":2,"endColumn":33},{"ruleId":"228","severity":1,"message":"258","line":3,"column":9,"nodeType":"230","messageId":"231","endLine":3,"endColumn":13},{"ruleId":"228","severity":1,"message":"259","line":3,"column":15,"nodeType":"230","messageId":"231","endLine":3,"endColumn":21},{"ruleId":"228","severity":1,"message":"260","line":3,"column":23,"nodeType":"230","messageId":"231","endLine":3,"endColumn":28},{"ruleId":"228","severity":1,"message":"261","line":3,"column":30,"nodeType":"230","messageId":"231","endLine":3,"endColumn":41},{"ruleId":"228","severity":1,"message":"262","line":4,"column":9,"nodeType":"230","messageId":"231","endLine":4,"endColumn":16},{"ruleId":"228","severity":1,"message":"263","line":4,"column":18,"nodeType":"230","messageId":"231","endLine":4,"endColumn":24},{"ruleId":"228","severity":1,"message":"264","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":15},{"ruleId":"228","severity":1,"message":"265","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":12},{"ruleId":"228","severity":1,"message":"239","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":16},{"ruleId":"228","severity":1,"message":"240","line":9,"column":9,"nodeType":"230","messageId":"231","endLine":9,"endColumn":20},{"ruleId":"228","severity":1,"message":"266","line":12,"column":9,"nodeType":"230","messageId":"231","endLine":12,"endColumn":19},{"ruleId":"228","severity":1,"message":"267","line":17,"column":8,"nodeType":"230","messageId":"231","endLine":17,"endColumn":15},{"ruleId":"235","severity":1,"message":"236","line":28,"column":72,"nodeType":"237","endLine":28,"endColumn":120},{"ruleId":"228","severity":1,"message":"268","line":44,"column":12,"nodeType":"230","messageId":"231","endLine":44,"endColumn":25},{"ruleId":"243","severity":1,"message":"269","line":54,"column":8,"nodeType":"245","endLine":54,"endColumn":10,"suggestions":"270"},{"ruleId":"235","severity":1,"message":"236","line":69,"column":75,"nodeType":"237","endLine":70,"endColumn":93},{"ruleId":"235","severity":1,"message":"236","line":146,"column":63,"nodeType":"237","endLine":146,"endColumn":112},{"ruleId":"271","severity":1,"message":"272","line":156,"column":104,"nodeType":"273","messageId":"274","endLine":156,"endColumn":105},{"ruleId":"275","severity":1,"message":"276","line":157,"column":44,"nodeType":"277","messageId":"278","endLine":157,"endColumn":110},{"ruleId":"228","severity":1,"message":"257","line":1,"column":34,"nodeType":"230","messageId":"231","endLine":1,"endColumn":40},{"ruleId":"228","severity":1,"message":"279","line":3,"column":9,"nodeType":"230","messageId":"231","endLine":3,"endColumn":23},{"ruleId":"243","severity":1,"message":"280","line":71,"column":8,"nodeType":"245","endLine":71,"endColumn":10,"suggestions":"281"},{"ruleId":"235","severity":1,"message":"236","line":96,"column":99,"nodeType":"237","endLine":96,"endColumn":148},{"ruleId":"228","severity":1,"message":"257","line":1,"column":29,"nodeType":"230","messageId":"231","endLine":1,"endColumn":35},{"ruleId":"228","severity":1,"message":"282","line":3,"column":10,"nodeType":"230","messageId":"231","endLine":3,"endColumn":16},{"ruleId":"243","severity":1,"message":"283","line":33,"column":56,"nodeType":"245","endLine":33,"endColumn":66,"suggestions":"284"},{"ruleId":"228","severity":1,"message":"285","line":34,"column":9,"nodeType":"230","messageId":"231","endLine":34,"endColumn":15},{"ruleId":"228","severity":1,"message":"286","line":1,"column":9,"nodeType":"230","messageId":"231","endLine":1,"endColumn":23},{"ruleId":"228","severity":1,"message":"261","line":1,"column":25,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"228","severity":1,"message":"263","line":3,"column":9,"nodeType":"230","messageId":"231","endLine":3,"endColumn":15},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'$' is defined but never used.","'Popper' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useReducer' is defined but never used.","'ReactDOM' is defined but never used.","'loadSqueals' is defined but never used.","'useLocation' is defined but never used.","'Squeal' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadNotifications'. Either include it or remove the dependency array.","ArrayExpression",["287"],"'owner' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isOwner', 'isSubscribed', and 'name'. Either include them or remove the dependency array.",["288"],"'getUserPropic' is defined but never used.","'getServerDomain' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'counter' is defined but never used.","'useRef' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'useNavigate' is defined but never used.","'Context' is defined but never used.","'router' is defined but never used.","'Profile' is defined but never used.","'Home' is defined but never used.","'createRoot' is defined but never used.","'Spinner' is defined but never used.","'reactionCheck' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkReaction', 'checkResqueal', and 'id'. Either include them or remove the dependency array. If 'setReactionCheck' needs the current value of 'id', you can also switch to useReducer instead of useState and read 'id' in the reducer.",["289"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'resizeTextarea' is defined but never used.","React Hook useEffect has a missing dependency: 'textAreaId'. Either include it or remove the dependency array.",["290"],"'google' is defined but never used.","React Hook useMemo has missing dependencies: 'lat' and 'lng'. Either include them or remove the dependency array.",["291"],"'marker' is defined but never used.","'RouterProvider' is defined but never used.",{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},"Update the dependencies array to be: [key, loadNotifications]",{"range":"302","text":"303"},"Update the dependencies array to be: [isOwner, isSubscribed, name]",{"range":"304","text":"305"},"Update the dependencies array to be: [checkReaction, checkResqueal, id]",{"range":"306","text":"307"},"Update the dependencies array to be: [textAreaId]",{"range":"308","text":"309"},"Update the dependencies array to be: [lat, lng]",{"range":"310","text":"311"},[707,712],"[key, loadNotifications]",[1206,1208],"[isOwner, isSubscribed, name]",[2119,2121],"[checkReaction, checkResqueal, id]",[3635,3637],"[textAreaId]",[1004,1014],"[lat, lng]"]